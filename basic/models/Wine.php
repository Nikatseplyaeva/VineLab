<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "wine".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $rating
 * @property string|null $color
 * @property string|null $sweet
 * @property string|null $country
 * @property string|null $type
 * @property string|null $degree
 * @property string|null $after_taste
 * @property string|null $snack
 * @property string|null $price
 * @property string|null $image
 * @property int|null $category_id
 */
class Wine extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'wine';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['category_id'], 'integer'],
            [['title', 'rating', 'color', 'sweet', 'country', 'type', 'degree', 'after_taste', 'snack', 'price', 'image'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'rating' => Yii::t('app', 'Rating'),
            'color' => Yii::t('app', 'Color'),
            'sweet' => Yii::t('app', 'Sweet'),
            'country' => Yii::t('app', 'Country'),
            'type' => Yii::t('app', 'Type'),
            'degree' => Yii::t('app', 'Degree'),
            'after_taste' => Yii::t('app', 'After Taste'),
            'snack' => Yii::t('app', 'Snack'),
            'price' => Yii::t('app', 'Price'),
            'image' => Yii::t('app', 'Image'),
            'category_id' => Yii::t('app', 'Category ID'),
        ];
    }

    public function saveImage($filename)
    {
        $this->image = $filename;
        return $this->save(false);
    }

    public function getImage()
    {
        return ($this->image) ? '/web/uploads/' . $this->image : '/no-image.png';
    }

    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
